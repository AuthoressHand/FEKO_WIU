/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feko_steffensmeierdoty;

import javax.swing.*;
import objects.*;

/**
 *
 * @author rms130
 */
public class CharacterModGUI extends javax.swing.JFrame {

    private final JButton[] teamSlots = new JButton[4];
    private final JButton[] characterOptions = new JButton[5];
    private final JLabel[] charsHomeLayer = new JLabel[4];
    private final AllyChar[] allyOptions = new AllyChar[5];
    private static Party team = new Party();
    
    /**
     * Creates new form CharacterModGUI
     */
    public CharacterModGUI() {
        initComponents();
        initCharacterModGUI();
    }
    
    public CharacterModGUI(Party team) {
        initComponents();
        initCharacterModGUI();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MainContainer = new javax.swing.JLayeredPane();
        MenuButtonLayer = new javax.swing.JLayeredPane();
        BattleButton = new javax.swing.JButton();
        AlliesButton = new javax.swing.JButton();
        MiscButton = new javax.swing.JButton();
        HomeButton = new javax.swing.JButton();
        BottomBorder = new javax.swing.JLabel();
        MainStatsLayer = new javax.swing.JLayeredPane();
        TopBorder = new javax.swing.JLabel();
        AlliesLayer = new javax.swing.JLayeredPane();
        StatsLayer = new javax.swing.JLayeredPane();
        LevelText = new javax.swing.JTextField();
        WeaponNameText = new javax.swing.JTextField();
        LevelProgresBar = new javax.swing.JProgressBar();
        CharacterPortrait = new javax.swing.JLabel();
        AttackLevel1 = new javax.swing.JTextField();
        AttackLevel = new javax.swing.JTextField();
        MaxHP = new javax.swing.JTextField();
        CurrentHP = new javax.swing.JTextField();
        NamePlateText = new javax.swing.JTextField();
        NamePlateDecor = new javax.swing.JLabel();
        NamePlate = new javax.swing.JLabel();
        StatsInterface = new javax.swing.JLabel();
        TopBorderStats = new javax.swing.JLabel();
        AlliesOptionsLayer = new javax.swing.JLayeredPane();
        LearnSkillsText = new javax.swing.JLabel();
        EquipSkillsText = new javax.swing.JLabel();
        EditTeamsText = new javax.swing.JLabel();
        AlliesBannerText = new javax.swing.JLabel();
        AlliesBanner = new javax.swing.JButton();
        EquipSkillsButton = new javax.swing.JButton();
        LearnSkillsButton = new javax.swing.JButton();
        EditTeamsButton = new javax.swing.JButton();
        AlliesOptionsBackground = new javax.swing.JLabel();
        EditTeamsLayer = new javax.swing.JLayeredPane();
        TeamLoadout = new javax.swing.JLayeredPane();
        Slot1 = new javax.swing.JButton();
        Slot2 = new javax.swing.JButton();
        Slot3 = new javax.swing.JButton();
        Slot4 = new javax.swing.JButton();
        SelenaButton = new javax.swing.JButton();
        RoyButton = new javax.swing.JButton();
        SoleilButton = new javax.swing.JButton();
        AlfonseButton = new javax.swing.JButton();
        AnnaButton = new javax.swing.JButton();
        TeamPickerUI = new javax.swing.JLabel();
        TeamLoadoutUI = new javax.swing.JLabel();
        EditTeamsBackButton = new javax.swing.JButton();
        EditTeamsBannerText = new javax.swing.JLabel();
        EditTeamBanner = new javax.swing.JButton();
        EditTeamsBackground = new javax.swing.JLabel();
        HomeLayer = new javax.swing.JLayeredPane();
        Stone = new javax.swing.JLabel();
        NewsBoard = new javax.swing.JLabel();
        Fountain = new javax.swing.JLabel();
        Owl = new javax.swing.JLabel();
        Character1 = new javax.swing.JLabel();
        Character2 = new javax.swing.JLabel();
        Character3 = new javax.swing.JLabel();
        Character4 = new javax.swing.JLabel();
        CastleBackground = new javax.swing.JLabel();
        BattleLayer = new javax.swing.JLayeredPane();
        StoryMapsText = new javax.swing.JLabel();
        StoryMapsButton = new javax.swing.JButton();
        StoryMapsPNG = new javax.swing.JLabel();
        WorldMapBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(540, 925));
        setMinimumSize(new java.awt.Dimension(540, 925));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(540, 925));

        MainContainer.setMaximumSize(new java.awt.Dimension(540, 925));
        MainContainer.setMinimumSize(new java.awt.Dimension(540, 925));
        MainContainer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MenuButtonLayer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BattleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/battle_button_idle.png"))); // NOI18N
        BattleButton.setBorderPainted(false);
        BattleButton.setContentAreaFilled(false);
        BattleButton.setFocusPainted(false);
        BattleButton.setMaximumSize(new java.awt.Dimension(90, 90));
        BattleButton.setMinimumSize(new java.awt.Dimension(90, 90));
        BattleButton.setPreferredSize(new java.awt.Dimension(90, 90));
        BattleButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BattleButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BattleButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BattleButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BattleButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                BattleButtonMouseReleased(evt);
            }
        });
        MenuButtonLayer.add(BattleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 30, 90, 100));

        AlliesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_button_idle.png"))); // NOI18N
        AlliesButton.setBorderPainted(false);
        AlliesButton.setContentAreaFilled(false);
        AlliesButton.setFocusPainted(false);
        AlliesButton.setMaximumSize(new java.awt.Dimension(90, 90));
        AlliesButton.setMinimumSize(new java.awt.Dimension(90, 90));
        AlliesButton.setPreferredSize(new java.awt.Dimension(90, 90));
        AlliesButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AlliesButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AlliesButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AlliesButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AlliesButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                AlliesButtonMouseReleased(evt);
            }
        });
        MenuButtonLayer.add(AlliesButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, 90, 100));

        MiscButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/misc_button_idle.png"))); // NOI18N
        MiscButton.setBorderPainted(false);
        MiscButton.setContentAreaFilled(false);
        MiscButton.setFocusPainted(false);
        MiscButton.setMaximumSize(new java.awt.Dimension(90, 90));
        MiscButton.setMinimumSize(new java.awt.Dimension(90, 90));
        MiscButton.setPreferredSize(new java.awt.Dimension(90, 90));
        MiscButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MiscButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                MiscButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                MiscButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MiscButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                MiscButtonMouseReleased(evt);
            }
        });
        MenuButtonLayer.add(MiscButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 90, 100));

        HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/home_button_idle.png"))); // NOI18N
        HomeButton.setBorderPainted(false);
        HomeButton.setContentAreaFilled(false);
        HomeButton.setFocusPainted(false);
        HomeButton.setMaximumSize(new java.awt.Dimension(90, 90));
        HomeButton.setMinimumSize(new java.awt.Dimension(90, 90));
        HomeButton.setPreferredSize(new java.awt.Dimension(90, 90));
        HomeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HomeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HomeButtonMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HomeButtonMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                HomeButtonMouseReleased(evt);
            }
        });
        MenuButtonLayer.add(HomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 90, 100));

        BottomBorder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/char_mod_border_bottom.png"))); // NOI18N
        MenuButtonLayer.add(BottomBorder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 180));

        MainContainer.add(MenuButtonLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 800, 540, 130));

        MainStatsLayer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TopBorder.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/char_mod_border_top.png"))); // NOI18N
        MainStatsLayer.add(TopBorder, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        MainContainer.add(MainStatsLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 80));

        AlliesLayer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        AlliesLayer.setVisible(false);

        StatsLayer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LevelText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LevelText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        LevelText.setBorder(null);
        LevelText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        LevelText.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        LevelText.setEnabled(false);
        LevelText.setOpaque(false);
        StatsLayer.add(LevelText, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 20, 40));

        WeaponNameText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        WeaponNameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        WeaponNameText.setBorder(null);
        WeaponNameText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        WeaponNameText.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        WeaponNameText.setEnabled(false);
        WeaponNameText.setOpaque(false);
        StatsLayer.add(WeaponNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 35, 140, 30));

        LevelProgresBar.setMaximumSize(new java.awt.Dimension(148, 35));
        LevelProgresBar.setMinimumSize(new java.awt.Dimension(148, 35));
        LevelProgresBar.setPreferredSize(new java.awt.Dimension(148, 35));
        StatsLayer.add(LevelProgresBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 120, 10));
        StatsLayer.add(CharacterPortrait, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 1, -1, -1));

        AttackLevel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AttackLevel1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AttackLevel1.setBorder(null);
        AttackLevel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AttackLevel1.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        AttackLevel1.setEnabled(false);
        AttackLevel1.setOpaque(false);
        StatsLayer.add(AttackLevel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 40, 30));

        AttackLevel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AttackLevel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AttackLevel.setBorder(null);
        AttackLevel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        AttackLevel.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        AttackLevel.setEnabled(false);
        AttackLevel.setOpaque(false);
        StatsLayer.add(AttackLevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 40, 30));

        MaxHP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MaxHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MaxHP.setBorder(null);
        MaxHP.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MaxHP.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        MaxHP.setEnabled(false);
        MaxHP.setOpaque(false);
        StatsLayer.add(MaxHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 40, 25));

        CurrentHP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        CurrentHP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CurrentHP.setBorder(null);
        CurrentHP.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CurrentHP.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        CurrentHP.setEnabled(false);
        CurrentHP.setOpaque(false);
        StatsLayer.add(CurrentHP, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 40, 25));

        NamePlateText.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        NamePlateText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        NamePlateText.setBorder(null);
        NamePlateText.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        NamePlateText.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        NamePlateText.setEnabled(false);
        NamePlateText.setOpaque(false);
        StatsLayer.add(NamePlateText, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 140, 25));

        NamePlateDecor.setForeground(new java.awt.Color(255, 255, 255));
        NamePlateDecor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NamePlateDecor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/name_plate_decor.png"))); // NOI18N
        StatsLayer.add(NamePlateDecor, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        NamePlate.setForeground(new java.awt.Color(255, 255, 255));
        NamePlate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NamePlate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/name_plate.png"))); // NOI18N
        StatsLayer.add(NamePlate, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        StatsInterface.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/stats_border_1.png"))); // NOI18N
        StatsLayer.add(StatsInterface, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        TopBorderStats.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        TopBorderStats.setForeground(new java.awt.Color(255, 255, 255));
        TopBorderStats.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/top_border_stats.png"))); // NOI18N
        StatsLayer.add(TopBorderStats, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 120));

        AlliesLayer.add(StatsLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 120));
        StatsLayer.setVisible(false);

        AlliesOptionsLayer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LearnSkillsText.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        LearnSkillsText.setForeground(new java.awt.Color(255, 255, 255));
        LearnSkillsText.setText("Learn Skills");
        AlliesOptionsLayer.add(LearnSkillsText, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 200, 60));

        EquipSkillsText.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        EquipSkillsText.setForeground(new java.awt.Color(255, 255, 255));
        EquipSkillsText.setText("Equip Skills");
        AlliesOptionsLayer.add(EquipSkillsText, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, 200, 60));

        EditTeamsText.setFont(new java.awt.Font("Franklin Gothic Book", 1, 30)); // NOI18N
        EditTeamsText.setForeground(new java.awt.Color(255, 255, 255));
        EditTeamsText.setText("Edit Teams");
        AlliesOptionsLayer.add(EditTeamsText, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 210, 60));

        AlliesBannerText.setFont(new java.awt.Font("Franklin Gothic Book", 1, 36)); // NOI18N
        AlliesBannerText.setForeground(new java.awt.Color(51, 51, 51));
        AlliesBannerText.setText("Allies");
        AlliesOptionsLayer.add(AlliesBannerText, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, 110, 60));

        AlliesBanner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/tan_header.png"))); // NOI18N
        AlliesBanner.setBorderPainted(false);
        AlliesBanner.setContentAreaFilled(false);
        AlliesBanner.setFocusPainted(false);
        AlliesBanner.setMaximumSize(new java.awt.Dimension(90, 90));
        AlliesBanner.setMinimumSize(new java.awt.Dimension(90, 90));
        AlliesBanner.setPreferredSize(new java.awt.Dimension(90, 90));
        AlliesOptionsLayer.add(AlliesBanner, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 500, 100));

        EquipSkillsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_option_button_idle.png"))); // NOI18N
        EquipSkillsButton.setBorderPainted(false);
        EquipSkillsButton.setContentAreaFilled(false);
        EquipSkillsButton.setFocusPainted(false);
        EquipSkillsButton.setMaximumSize(new java.awt.Dimension(90, 90));
        EquipSkillsButton.setMinimumSize(new java.awt.Dimension(90, 90));
        EquipSkillsButton.setPreferredSize(new java.awt.Dimension(90, 90));
        EquipSkillsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EquipSkillsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EquipSkillsButtonMouseExited(evt);
            }
        });
        AlliesOptionsLayer.add(EquipSkillsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 460, 100));

        LearnSkillsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_option_button_idle.png"))); // NOI18N
        LearnSkillsButton.setBorderPainted(false);
        LearnSkillsButton.setContentAreaFilled(false);
        LearnSkillsButton.setFocusPainted(false);
        LearnSkillsButton.setMaximumSize(new java.awt.Dimension(90, 90));
        LearnSkillsButton.setMinimumSize(new java.awt.Dimension(90, 90));
        LearnSkillsButton.setPreferredSize(new java.awt.Dimension(90, 90));
        LearnSkillsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LearnSkillsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LearnSkillsButtonMouseExited(evt);
            }
        });
        AlliesOptionsLayer.add(LearnSkillsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 460, 100));

        EditTeamsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_option_button_idle.png"))); // NOI18N
        EditTeamsButton.setBorderPainted(false);
        EditTeamsButton.setContentAreaFilled(false);
        EditTeamsButton.setFocusPainted(false);
        EditTeamsButton.setMaximumSize(new java.awt.Dimension(90, 90));
        EditTeamsButton.setMinimumSize(new java.awt.Dimension(90, 90));
        EditTeamsButton.setPreferredSize(new java.awt.Dimension(90, 90));
        EditTeamsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditTeamsButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditTeamsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditTeamsButtonMouseExited(evt);
            }
        });
        AlliesOptionsLayer.add(EditTeamsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 460, 100));

        AlliesOptionsBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/backgrounds/allies_background.png"))); // NOI18N
        AlliesOptionsLayer.add(AlliesOptionsBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, 30, 630, 930));

        AlliesLayer.add(AlliesOptionsLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 540, 900));

        EditTeamsLayer.setMinimumSize(new java.awt.Dimension(540, 900));
        EditTeamsLayer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TeamLoadout.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        Slot1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png"))); // NOI18N
        Slot1.setBorder(null);
        Slot1.setContentAreaFilled(false);
        Slot1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Slot1MouseEntered(evt);
            }
        });
        TeamLoadout.add(Slot1);

        Slot2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png"))); // NOI18N
        Slot2.setBorder(null);
        Slot2.setContentAreaFilled(false);
        Slot2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Slot2MouseEntered(evt);
            }
        });
        TeamLoadout.add(Slot2);

        Slot3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png"))); // NOI18N
        Slot3.setBorder(null);
        Slot3.setContentAreaFilled(false);
        Slot3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Slot3MouseEntered(evt);
            }
        });
        TeamLoadout.add(Slot3);

        Slot4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png"))); // NOI18N
        Slot4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Slot4.setContentAreaFilled(false);
        Slot4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Slot4MouseEntered(evt);
            }
        });
        TeamLoadout.add(Slot4);

        EditTeamsLayer.add(TeamLoadout, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, 390, 90));

        SelenaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/selena_silver_portrait_idle.png"))); // NOI18N
        SelenaButton.setBorderPainted(false);
        SelenaButton.setContentAreaFilled(false);
        SelenaButton.setFocusPainted(false);
        SelenaButton.setMaximumSize(new java.awt.Dimension(90, 90));
        SelenaButton.setMinimumSize(new java.awt.Dimension(90, 90));
        SelenaButton.setPreferredSize(new java.awt.Dimension(90, 90));
        SelenaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelenaButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SelenaButtonMouseEntered(evt);
            }
        });
        EditTeamsLayer.add(SelenaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 460, 90, 90));

        RoyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/roy_silver_portrait_idle.png"))); // NOI18N
        RoyButton.setBorderPainted(false);
        RoyButton.setContentAreaFilled(false);
        RoyButton.setFocusPainted(false);
        RoyButton.setMaximumSize(new java.awt.Dimension(90, 90));
        RoyButton.setMinimumSize(new java.awt.Dimension(90, 90));
        RoyButton.setPreferredSize(new java.awt.Dimension(90, 90));
        RoyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RoyButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RoyButtonMouseEntered(evt);
            }
        });
        EditTeamsLayer.add(RoyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 340, 90, 90));

        SoleilButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/soleil_silver_portrait_idle.png"))); // NOI18N
        SoleilButton.setBorderPainted(false);
        SoleilButton.setContentAreaFilled(false);
        SoleilButton.setFocusPainted(false);
        SoleilButton.setMaximumSize(new java.awt.Dimension(90, 90));
        SoleilButton.setMinimumSize(new java.awt.Dimension(90, 90));
        SoleilButton.setPreferredSize(new java.awt.Dimension(90, 90));
        SoleilButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SoleilButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SoleilButtonMouseEntered(evt);
            }
        });
        EditTeamsLayer.add(SoleilButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 90, 90));

        AlfonseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/alfonse_silver_portrait_idle.png"))); // NOI18N
        AlfonseButton.setBorderPainted(false);
        AlfonseButton.setContentAreaFilled(false);
        AlfonseButton.setFocusPainted(false);
        AlfonseButton.setMaximumSize(new java.awt.Dimension(90, 90));
        AlfonseButton.setMinimumSize(new java.awt.Dimension(90, 90));
        AlfonseButton.setPreferredSize(new java.awt.Dimension(90, 90));
        AlfonseButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AlfonseButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AlfonseButtonMouseEntered(evt);
            }
        });
        EditTeamsLayer.add(AlfonseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 90, 90));

        AnnaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/anna_silver_portrait_idle.png"))); // NOI18N
        AnnaButton.setBorderPainted(false);
        AnnaButton.setContentAreaFilled(false);
        AnnaButton.setFocusPainted(false);
        AnnaButton.setMaximumSize(new java.awt.Dimension(90, 90));
        AnnaButton.setMinimumSize(new java.awt.Dimension(90, 90));
        AnnaButton.setPreferredSize(new java.awt.Dimension(90, 90));
        AnnaButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnnaButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AnnaButtonMouseEntered(evt);
            }
        });
        EditTeamsLayer.add(AnnaButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 90, 90));

        TeamPickerUI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/team_picker_UI.png"))); // NOI18N
        EditTeamsLayer.add(TeamPickerUI, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 310, 600, 400));

        TeamLoadoutUI.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/team_loadout_UI.png"))); // NOI18N
        EditTeamsLayer.add(TeamLoadoutUI, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 120, 540, 170));

        EditTeamsBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/back_button_idle.png"))); // NOI18N
        EditTeamsBackButton.setBorderPainted(false);
        EditTeamsBackButton.setContentAreaFilled(false);
        EditTeamsBackButton.setFocusPainted(false);
        EditTeamsBackButton.setMaximumSize(new java.awt.Dimension(90, 90));
        EditTeamsBackButton.setMinimumSize(new java.awt.Dimension(90, 90));
        EditTeamsBackButton.setPreferredSize(new java.awt.Dimension(90, 90));
        EditTeamsBackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditTeamsBackButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                EditTeamsBackButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                EditTeamsBackButtonMouseExited(evt);
            }
        });
        EditTeamsLayer.add(EditTeamsBackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 80, 80));

        EditTeamsBannerText.setFont(new java.awt.Font("Franklin Gothic Book", 1, 36)); // NOI18N
        EditTeamsBannerText.setForeground(new java.awt.Color(51, 51, 51));
        EditTeamsBannerText.setText("Edit Teams");
        EditTeamsLayer.add(EditTeamsBannerText, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 210, 60));

        EditTeamBanner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/tan_header.png"))); // NOI18N
        EditTeamBanner.setBorderPainted(false);
        EditTeamBanner.setContentAreaFilled(false);
        EditTeamBanner.setFocusPainted(false);
        EditTeamBanner.setMaximumSize(new java.awt.Dimension(90, 90));
        EditTeamBanner.setMinimumSize(new java.awt.Dimension(90, 90));
        EditTeamBanner.setPreferredSize(new java.awt.Dimension(90, 90));
        EditTeamsLayer.add(EditTeamBanner, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 500, 80));

        EditTeamsBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/backgrounds/allies_background.png"))); // NOI18N
        EditTeamsLayer.add(EditTeamsBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, -30, 630, 930));

        AlliesLayer.add(EditTeamsLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 540, 900));

        MainContainer.add(AlliesLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 930));

        HomeLayer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Stone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/glowing_stone.png"))); // NOI18N
        HomeLayer.add(Stone, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 620, -1, -1));

        NewsBoard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/news_board.png"))); // NOI18N
        HomeLayer.add(NewsBoard, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, -1, -1));

        Fountain.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/fountain.png"))); // NOI18N
        HomeLayer.add(Fountain, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 610, -1, -1));

        Owl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/UIMenu/owl.png"))); // NOI18N
        HomeLayer.add(Owl, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, -1, -1));
        HomeLayer.add(Character1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));
        HomeLayer.add(Character2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 390, -1, -1));
        HomeLayer.add(Character3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 410, -1, -1));
        HomeLayer.add(Character4, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 540, -1, -1));

        CastleBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/backgrounds/player_castle_background.png"))); // NOI18N
        HomeLayer.add(CastleBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(-80, 0, 630, 930));

        MainContainer.add(HomeLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 930));

        BattleLayer.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        BattleLayer.setVisible(false);

        StoryMapsText.setFont(new java.awt.Font("Franklin Gothic Book", 1, 24)); // NOI18N
        StoryMapsText.setForeground(new java.awt.Color(51, 51, 51));
        StoryMapsText.setText("Story Maps");
        BattleLayer.add(StoryMapsText, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 470, 130, 40));

        StoryMapsButton.setBorderPainted(false);
        StoryMapsButton.setContentAreaFilled(false);
        StoryMapsButton.setFocusPainted(false);
        StoryMapsButton.setMaximumSize(new java.awt.Dimension(90, 90));
        StoryMapsButton.setMinimumSize(new java.awt.Dimension(90, 90));
        StoryMapsButton.setPreferredSize(new java.awt.Dimension(90, 90));
        StoryMapsButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                StoryMapsButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                StoryMapsButtonMouseExited(evt);
            }
        });
        StoryMapsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoryMapsButtonActionPerformed(evt);
            }
        });
        BattleLayer.add(StoryMapsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 310, 140, 170));

        StoryMapsPNG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/main_story_button_idle.png"))); // NOI18N
        BattleLayer.add(StoryMapsPNG, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        WorldMapBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/backgrounds/world_map.png"))); // NOI18N
        BattleLayer.add(WorldMapBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(-90, 0, 630, 930));

        MainContainer.add(BattleLayer, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 930));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 925, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    //Sets hover picture for Misc Button
    private void MiscButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiscButtonMouseEntered
        MiscButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/misc_button_hover.png")));
    }//GEN-LAST:event_MiscButtonMouseEntered
   
    //Sets idle picture for Misc Button
    private void MiscButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiscButtonMouseExited
        MiscButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/misc_button_idle.png")));
    }//GEN-LAST:event_MiscButtonMouseExited

    private void MiscButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiscButtonMouseClicked
        //TODO
    }//GEN-LAST:event_MiscButtonMouseClicked

    //Sets click picture for Misc Button
    private void MiscButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiscButtonMousePressed
        MiscButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/misc_button_click.png")));
    }//GEN-LAST:event_MiscButtonMousePressed

    //Enables only the Battle Layer to be seen
    private void BattleButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BattleButtonMouseClicked
        HomeLayer.setVisible(false);
        AlliesLayer.setVisible(false);
        StatsLayer.setVisible(false);
        AlliesOptionsLayer.setVisible(true);
        MainStatsLayer.setVisible(true);
        BattleLayer.setVisible(true);
    }//GEN-LAST:event_BattleButtonMouseClicked

    //Sets hover picture for Battle Button
    private void BattleButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BattleButtonMouseEntered
        BattleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/battle_button_hover.png")));
    }//GEN-LAST:event_BattleButtonMouseEntered

    //Sets idle picture for Battle Button
    private void BattleButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BattleButtonMouseExited
        BattleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/battle_button_idle.png")));
    }//GEN-LAST:event_BattleButtonMouseExited

    //Sets click picture for Battle Button
    private void BattleButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BattleButtonMousePressed
        BattleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/battle_button_click.png")));
    }//GEN-LAST:event_BattleButtonMousePressed

    //Enables only the Allies Layer to be seen
    private void AlliesButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlliesButtonMouseClicked
        BattleLayer.setVisible(false);
        HomeLayer.setVisible(false);
        StatsLayer.setVisible(false);
        EditTeamsLayer.setVisible(false);
        AlliesOptionsLayer.setVisible(true);
        MainStatsLayer.setVisible(true);
        AlliesLayer.setVisible(true);
    }//GEN-LAST:event_AlliesButtonMouseClicked

    //Sets hover picture for Allies Button
    private void AlliesButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlliesButtonMouseEntered
        AlliesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_button_hover.png")));
    }//GEN-LAST:event_AlliesButtonMouseEntered

    //Sets idle picture for Allies Button
    private void AlliesButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlliesButtonMouseExited
        AlliesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_button_idle.png")));
    }//GEN-LAST:event_AlliesButtonMouseExited

    //Sets click picture for Allies Button
    private void AlliesButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlliesButtonMousePressed
        AlliesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_button_click.png")));
    }//GEN-LAST:event_AlliesButtonMousePressed

    //Sets hover picture for Misc Button
    private void MiscButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MiscButtonMouseReleased
        MiscButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/misc_button_hover.png")));
    }//GEN-LAST:event_MiscButtonMouseReleased

    //Sets hover picture for Allies Button
    private void AlliesButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlliesButtonMouseReleased
        AlliesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_button_hover.png")));
    }//GEN-LAST:event_AlliesButtonMouseReleased

    //Sets hover picture for Battle Button
    private void BattleButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BattleButtonMouseReleased
        BattleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/battle_button_hover.png")));
    }//GEN-LAST:event_BattleButtonMouseReleased

    //Sets hover picture for Home Button
    private void HomeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeButtonMouseEntered
        HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/home_button_hover.png")));
    }//GEN-LAST:event_HomeButtonMouseEntered

    //Sets idle picture for Home Button
    private void HomeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeButtonMouseExited
        HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/home_button_idle.png")));
    }//GEN-LAST:event_HomeButtonMouseExited

    //Sets click picture for Home Button
    private void HomeButtonMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeButtonMousePressed
        HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/home_button_click.png")));
    }//GEN-LAST:event_HomeButtonMousePressed

    //Sets idle picture for Home Button
    private void HomeButtonMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeButtonMouseReleased
        HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/home_button_idle.png")));
    }//GEN-LAST:event_HomeButtonMouseReleased

    //Sets hover picture for Story Maps Button
    private void StoryMapsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StoryMapsButtonMouseEntered
        StoryMapsPNG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/main_story_button_hover.png")));
    }//GEN-LAST:event_StoryMapsButtonMouseEntered

    //Sets idle picture for Story Maps Button
    private void StoryMapsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StoryMapsButtonMouseExited
        StoryMapsPNG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/main_story_button_idle.png")));
    }//GEN-LAST:event_StoryMapsButtonMouseExited

    //Sets the CharacterModGUI frame to inivisible, and creates and displays the MapGUI (level)
    private void StoryMapsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoryMapsButtonActionPerformed
        if(getTeamSize() > 0) {  
            LevelTransitionGUI ltGUI = new LevelTransitionGUI(1,team,this);
            ltGUI.setVisible(true);
            setVisible(false);
        }
    }//GEN-LAST:event_StoryMapsButtonActionPerformed

    //Enables only the Edit Teams Layer to be seen
    private void EditTeamsButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditTeamsButtonMouseClicked
        MainStatsLayer.setVisible(false);
        AlliesOptionsLayer.setVisible(false);
        StatsLayer.setVisible(true);
        EditTeamsLayer.setVisible(true);
        updateCharacterStats(0);
    }//GEN-LAST:event_EditTeamsButtonMouseClicked

    //Sets hover picture for Edit Teams Button
    private void EditTeamsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditTeamsButtonMouseEntered
        EditTeamsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_option_button_hover.png")));
    }//GEN-LAST:event_EditTeamsButtonMouseEntered

    //Sets idle picture for Edit Teams Button
    private void EditTeamsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditTeamsButtonMouseExited
        EditTeamsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_option_button_idle.png")));
    }//GEN-LAST:event_EditTeamsButtonMouseExited

    //Sets hover picture for Learn Skills Button
    private void LearnSkillsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LearnSkillsButtonMouseEntered
        LearnSkillsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_option_button_hover.png")));
    }//GEN-LAST:event_LearnSkillsButtonMouseEntered

    //Sets idle picture for Learn Skills Button
    private void LearnSkillsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LearnSkillsButtonMouseExited
        LearnSkillsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_option_button_idle.png")));
    }//GEN-LAST:event_LearnSkillsButtonMouseExited

    //Sets hover picture for Equip Skills Button
    private void EquipSkillsButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EquipSkillsButtonMouseEntered
        EquipSkillsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_option_button_hover.png")));
    }//GEN-LAST:event_EquipSkillsButtonMouseEntered

    //Sets idle picture for Equip Skills Button
    private void EquipSkillsButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EquipSkillsButtonMouseExited
        EquipSkillsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/allies_option_button_idle.png")));
    }//GEN-LAST:event_EquipSkillsButtonMouseExited

    //Enables only the Edit Teams Layer to be visible
    private void EditTeamsBackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditTeamsBackButtonMouseClicked
        EditTeamsLayer.setVisible(false);
        StatsLayer.setVisible(false);
        AlliesOptionsLayer.setVisible(true);
        MainStatsLayer.setVisible(true);
    }//GEN-LAST:event_EditTeamsBackButtonMouseClicked

    //Sets hover picture for Edit Teams Button
    private void EditTeamsBackButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditTeamsBackButtonMouseEntered
        EditTeamsBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/back_button_hover.png")));
    }//GEN-LAST:event_EditTeamsBackButtonMouseEntered

    //Sets idle picture for Edit Teams Button
    private void EditTeamsBackButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditTeamsBackButtonMouseExited
        EditTeamsBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buttons/back_button_idle.png")));
    }//GEN-LAST:event_EditTeamsBackButtonMouseExited

    //Sets clicked picture for Character Button1 in Edit Teams Layer
    private void AnnaButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnaButtonMouseClicked
        editTeam(AnnaButton,"/img/portraits/anna_silver_portrait_idle.png","/img/portraits/anna_silver_portrait_clicked.png");
    }//GEN-LAST:event_AnnaButtonMouseClicked

    //Sets clicked picture for Character Button2 in Edit Teams Layer
    private void AlfonseButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlfonseButtonMouseClicked
        editTeam(AlfonseButton,"/img/portraits/alfonse_silver_portrait_idle.png","/img/portraits/alfonse_silver_portrait_clicked.png");
    }//GEN-LAST:event_AlfonseButtonMouseClicked

    //Sets clicked picture for Character Button3 in Edit Teams Layer
    private void SoleilButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SoleilButtonMouseClicked
        editTeam(SoleilButton,"/img/portraits/soleil_silver_portrait_idle.png","/img/portraits/soleil_silver_portrait_clicked.png");  
    }//GEN-LAST:event_SoleilButtonMouseClicked

    //Sets clicked picture for Character Button4 in Edit Teams Layer
    private void RoyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoyButtonMouseClicked
        editTeam(RoyButton,"/img/portraits/roy_silver_portrait_idle.png","/img/portraits/roy_silver_portrait_clicked.png");
    }//GEN-LAST:event_RoyButtonMouseClicked

    //Sets clicked picture for Character Button5 in Edit Teams Layer
    private void SelenaButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelenaButtonMouseClicked
        editTeam(SelenaButton,"/img/portraits/selena_silver_portrait_idle.png","/img/portraits/selena_silver_portrait_clicked.png");
    }//GEN-LAST:event_SelenaButtonMouseClicked

    //Enables only the Home Layer is seen
    private void HomeButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeButtonMouseClicked
        populateHomeLayerTeam();
        AlliesOptionsLayer.setVisible(false);
        AlliesLayer.setVisible(false);
        StatsLayer.setVisible(false);
        BattleLayer.setVisible(false);
        MainStatsLayer.setVisible(true);
        HomeLayer.setVisible(true);
    }//GEN-LAST:event_HomeButtonMouseClicked

    private void Slot1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Slot1MouseEntered
        if(!Slot1.getIcon().toString().equals(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png")))) {
            int i = 0;
            for(AllyChar ac: allyOptions) {
                if(Slot1.getIcon().toString().equals(ac.getPortaitImageIdle().toString())) {
                    StatsLayer.setVisible(true);
                    updateCharacterStats(i);
                }
                i++;
            }
        }
    }//GEN-LAST:event_Slot1MouseEntered

    private void Slot2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Slot2MouseEntered
        if(!Slot2.getIcon().toString().equals(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png")))) {
            int i = 0;
            for(AllyChar ac: allyOptions) {
                if(Slot2.getIcon().toString().equals(ac.getPortaitImageIdle().toString())) {
                    StatsLayer.setVisible(true);
                    updateCharacterStats(i);
                }
                i++;
            }
        }
    }//GEN-LAST:event_Slot2MouseEntered

    private void Slot3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Slot3MouseEntered
        if(!Slot3.getIcon().toString().equals(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png")))) {
            int i = 0;
            for(AllyChar ac: allyOptions) {
                if(Slot3.getIcon().toString().equals(ac.getPortaitImageIdle().toString())) {
                    StatsLayer.setVisible(true);
                    updateCharacterStats(i);
                }
                i++;
            }
        }
    }//GEN-LAST:event_Slot3MouseEntered

    private void Slot4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Slot4MouseEntered
        if(!Slot4.getIcon().toString().equals(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png")))) {
            int i = 0;
            for(AllyChar ac: allyOptions) {
                if(Slot4.getIcon().toString().equals(ac.getPortaitImageIdle().toString())) {
                    StatsLayer.setVisible(true);
                    updateCharacterStats(i);
                }
                i++;
            }
        }
    }//GEN-LAST:event_Slot4MouseEntered

    private void AnnaButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnaButtonMouseEntered
        updateCharacterStats(0);
    }//GEN-LAST:event_AnnaButtonMouseEntered

    private void AlfonseButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AlfonseButtonMouseEntered
        updateCharacterStats(1);
    }//GEN-LAST:event_AlfonseButtonMouseEntered

    private void SoleilButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SoleilButtonMouseEntered
        updateCharacterStats(2);
    }//GEN-LAST:event_SoleilButtonMouseEntered

    private void RoyButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RoyButtonMouseEntered
        updateCharacterStats(3);
    }//GEN-LAST:event_RoyButtonMouseEntered

    private void SelenaButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelenaButtonMouseEntered
        updateCharacterStats(4);
    }//GEN-LAST:event_SelenaButtonMouseEntered

    //Removes or adds character to the team. It also updates the GUI to show current team
    private void editTeam(JButton characterButton, String idleImg, String clickImg) {
        if(characterButton.getIcon().toString().equals(new javax.swing.ImageIcon(getClass().getResource(clickImg)).toString())){
            characterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(idleImg)));

            for(int i = 0; i < teamSlots.length; i++){
                if(teamSlots[i].getIcon().toString().equals(new javax.swing.ImageIcon(getClass().getResource(idleImg)).toString())) {
                    team.removeFromArmy(i);
                    if(i == teamSlots.length-1){
                        teamSlots[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png")));
                        return;
                    }
                    while(i < teamSlots.length-1){
                        teamSlots[i].setIcon(teamSlots[i+1].getIcon());
                        i++;
                    }
                    teamSlots[i].setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png")));
                    return;
                }
            }
        } else {
            if(isTeamFull())
                return;
            characterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(clickImg)));
            for (JButton teamSlot : teamSlots) {
                if (teamSlot.getIcon().toString().equals(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png")).toString())) {
                    for(AllyChar ac: allyOptions){
                        if(ac.getPortaitImageIdle().toString().equals(characterButton.getIcon().toString())||ac.getPortaitImageClicked().toString().equals(characterButton.getIcon().toString())) {
                            team.addToArmy(ac);
                        }
                    }
                    teamSlot.setIcon(new javax.swing.ImageIcon(getClass().getResource(idleImg)));
                    return;
                }
            }
        }
    }
    
    //Checks to see if the 4 slots of a player's team is full
    private boolean isTeamFull() {
        for(JButton jb: teamSlots){
            if(jb.getIcon().toString().equals(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png")).toString()))
                return false;
        }
        return true;
    }
    
    //Returns the amount of characters in a player's current team
    private int getTeamSize() {
        int counter = 0;
        for(JButton jb: teamSlots){
            if(!jb.getIcon().toString().equals(new javax.swing.ImageIcon(getClass().getResource("/img/portraits/empty_portrait.png")).toString()))
                counter++;
        }
        return counter;
    }
    
    //Updates the character in the Home Layer to current team loadout
    private void populateHomeLayerTeam() {
        for(int i = 0; i < charsHomeLayer.length; i++) {
            if(i < team.getArmySize())
                charsHomeLayer[i].setIcon(team.getArmyChar(i).getImg());
            else 
                charsHomeLayer[i].setIcon(null);
        }
    }
    
    //Initializes variables that must be set before user input
    private void initCharacterModGUI() {
        
        teamSlots[0] = Slot1;
        teamSlots[1] = Slot2;
        teamSlots[2] = Slot3;
        teamSlots[3] = Slot4;
        
        allyOptions[0] = new AllyChar("Anna");
        allyOptions[1] = new AllyChar("Alfonse");
        allyOptions[2] = new AllyChar("Soleil");
        allyOptions[3] = new AllyChar("Roy");
        allyOptions[4] = new AllyChar("Selena");
        
        characterOptions[0] = AnnaButton;
        characterOptions[1] = AlfonseButton;
        characterOptions[2] = SoleilButton;
        characterOptions[3] = RoyButton;
        characterOptions[4] = SelenaButton;
        
        charsHomeLayer[0] = Character1;
        charsHomeLayer[1] = Character2;
        charsHomeLayer[2] = Character3;
        charsHomeLayer[3] = Character4;
        
        editTeam(AnnaButton,"/img/portraits/anna_silver_portrait_idle.png","/img/portraits/anna_silver_portrait_clicked.png");
        
        populateHomeLayerTeam();
    }
    
    private void updateCharacterStats(int partyPosition) {
        CharacterPortrait.setIcon(allyOptions[partyPosition].getBattlePortrait());
        WeaponNameText.setText(allyOptions[partyPosition].getWeapon().getName() + "");
        LevelText.setText(allyOptions[partyPosition].getLevel() + "");
        NamePlateText.setText(allyOptions[partyPosition].getName());
        CurrentHP.setText(allyOptions[partyPosition].getCurrentHP() + "");
        MaxHP.setText(allyOptions[partyPosition].getMaxHP() + "");
        AttackLevel.setText(allyOptions[partyPosition].getTotalAtk()+ "");
        AttackLevel1.setText(allyOptions[partyPosition].getTotalDef()+ "");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CharacterModGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CharacterModGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CharacterModGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CharacterModGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CharacterModGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AlfonseButton;
    private javax.swing.JButton AlliesBanner;
    private javax.swing.JLabel AlliesBannerText;
    private javax.swing.JButton AlliesButton;
    private javax.swing.JLayeredPane AlliesLayer;
    private javax.swing.JLabel AlliesOptionsBackground;
    private javax.swing.JLayeredPane AlliesOptionsLayer;
    private javax.swing.JButton AnnaButton;
    private javax.swing.JTextField AttackLevel;
    private javax.swing.JTextField AttackLevel1;
    private javax.swing.JButton BattleButton;
    private javax.swing.JLayeredPane BattleLayer;
    private javax.swing.JLabel BottomBorder;
    private javax.swing.JLabel CastleBackground;
    private javax.swing.JLabel Character1;
    private javax.swing.JLabel Character2;
    private javax.swing.JLabel Character3;
    private javax.swing.JLabel Character4;
    private javax.swing.JLabel CharacterPortrait;
    private javax.swing.JTextField CurrentHP;
    private javax.swing.JButton EditTeamBanner;
    private javax.swing.JButton EditTeamsBackButton;
    private javax.swing.JLabel EditTeamsBackground;
    private javax.swing.JLabel EditTeamsBannerText;
    private javax.swing.JButton EditTeamsButton;
    private javax.swing.JLayeredPane EditTeamsLayer;
    private javax.swing.JLabel EditTeamsText;
    private javax.swing.JButton EquipSkillsButton;
    private javax.swing.JLabel EquipSkillsText;
    private javax.swing.JLabel Fountain;
    private javax.swing.JButton HomeButton;
    private javax.swing.JLayeredPane HomeLayer;
    private javax.swing.JButton LearnSkillsButton;
    private javax.swing.JLabel LearnSkillsText;
    private javax.swing.JProgressBar LevelProgresBar;
    private javax.swing.JTextField LevelText;
    private javax.swing.JLayeredPane MainContainer;
    private javax.swing.JLayeredPane MainStatsLayer;
    private javax.swing.JTextField MaxHP;
    private javax.swing.JLayeredPane MenuButtonLayer;
    private javax.swing.JButton MiscButton;
    private javax.swing.JLabel NamePlate;
    private javax.swing.JLabel NamePlateDecor;
    private javax.swing.JTextField NamePlateText;
    private javax.swing.JLabel NewsBoard;
    private javax.swing.JLabel Owl;
    private javax.swing.JButton RoyButton;
    private javax.swing.JButton SelenaButton;
    private javax.swing.JButton Slot1;
    private javax.swing.JButton Slot2;
    private javax.swing.JButton Slot3;
    private javax.swing.JButton Slot4;
    private javax.swing.JButton SoleilButton;
    private javax.swing.JLabel StatsInterface;
    private javax.swing.JLayeredPane StatsLayer;
    private javax.swing.JLabel Stone;
    private javax.swing.JButton StoryMapsButton;
    private javax.swing.JLabel StoryMapsPNG;
    private javax.swing.JLabel StoryMapsText;
    private javax.swing.JLayeredPane TeamLoadout;
    private javax.swing.JLabel TeamLoadoutUI;
    private javax.swing.JLabel TeamPickerUI;
    private javax.swing.JLabel TopBorder;
    private javax.swing.JLabel TopBorderStats;
    private javax.swing.JTextField WeaponNameText;
    private javax.swing.JLabel WorldMapBackground;
    // End of variables declaration//GEN-END:variables
}
